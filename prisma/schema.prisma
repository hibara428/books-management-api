// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  userSearchConditions UserSearchCondition[]
  userBooks UserBook[]
}

model SearchCondition {
  id Int @id @default(autoincrement())
  type Int
  keyword String
  createdAt DateTime @default(now())
  userSearchConditions UserSearchCondition[]
  bookSearchQueues BookSearchQueue[]
}

model UserSearchCondition {
  id Int @id @default(autoincrement())
  userId Int
  searchConditionId Int
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  searchCondition SearchCondition @relation(fields: [searchConditionId], references: [id])
}

model UserBook {
  id Int @id @default(autoincrement())
  userId Int
  month String
  bookId Int
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])
}

model Book {
  id Int @id @default(autoincrement())
  title String
  titleFurigana String
  subtitle String
  subtitleFurigana String
  seriesName String
  seriesNameFurigana String
  authorName String
  authorNameFurigana String
  publisherName String
  size String
  isbn String
  caption String
  salesDate DateTime
  salesDateText String
  price Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  userBooks UserBook[]
}

model BookSearchQueue {
  id Int @id @default(autoincrement())
  searchConditionId Int
  startDate DateTime
  createdAt DateTime @default(now())
  searchCondition SearchCondition @relation(fields: [searchConditionId], references: [id])
}
